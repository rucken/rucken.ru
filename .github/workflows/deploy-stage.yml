name: "Deploy to stage"

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    # branches: [develop]

jobs:
  deploy-to-stage:
    name: Deploy to stage
    environment: prod
    runs-on: ubuntu-latest

    steps:
      # E2E tests in docker 
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2

      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/ci-package.json') }}

      - name: Install packages
        run: yarn install --link-duplicates --non-interactive
        if: ${{steps.cache_node_modules.outputs.cache-hit != 'true' }}

      - name: Run build scripts
        run: |
          npm run scripts:build

      - name: Build the test prod on docker
        run: |
          . ./env/prod.env.sh
          export MAILER_TRANSPORT=${{ secrets.MAILER_TRANSPORT }}
          npm run docker:prod-local:test-build

      - name: Show backend docker logs
        run: |
          var1=$(docker logs rucken-site-backend-service)
          if grep -q "Listening at" <<<"$var1"; then
            echo "ok"
          else 
            echo $var1
            exit 1
          fi

      - name: Test backend docker
        run: |
          var1=$(docker run --network container:rucken-site-backend-service appropriate/curl -s --retry 40 --retry-connrefused http://localhost:5000/home)
          if grep -q "<title>Cross-platform fullstack core libraries for create Angular,
          NestJS and Ionic applications with samples working on NX workspace - Rucken</title" <<<"$var1"; then
            echo "ok"
          else 
            echo $var1
            exit 1
          fi

      # Delivery to host     

      - name: Run build scripts
        run: |
          npm run scripts:build
          
      - name: Run build code
        run: |
          npm run generate-ci
          npm run build:ssr

      - name: Run generate K8S files
        run: |
          . ./env/prod.env.sh
          export MAILER_TRANSPORT=${{ secrets.MAILER_TRANSPORT }}
          export HOST=${{ secrets.HOST }}
          node ./k8s/generators/generator.js

      - name: Copy K8S files to host
        uses: appleboy/scp-action@master
        if: ${{ github.event_name == 'push' }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: "k8s,env,VERSION.txt"
          target: "vps/rucken-site"
          rm: true

      - name: Run build Docker images
        run: |
          npm run k8s:prod:build-images

      - name: Add size of images to file
        run: ls ./tmp -l --block-size=MB >> temp_file_list.txt

      - name: Create comment for size of images
        id: get-comment-body
        run: |
          body=$(cat temp_file_list.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          echo ::set-output name=body::$body

      - name: Add size of images to commit as comment
        uses: peter-evans/commit-comment@v1
        with:
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Copy docker images to host
        uses: appleboy/scp-action@master
        if: ${{ github.event_name == 'push' }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: "tmp/rucken-site-backend-prod.tar.gz"
          target: "vps/rucken-site"
          overwrite: true

      # Apply changes
      
      - name: Apply to K8S
        uses: appleboy/ssh-action@master
        if: ${{ github.event_name == 'push' }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd ./vps/rucken-site
            . ./env/prod.env.sh
            export MAILER_TRANSPORT=${{ secrets.MAILER_TRANSPORT }}
            export HOST=${{ secrets.HOST }}
            ./k8s/import-images.sh
            ./k8s/apply.sh
